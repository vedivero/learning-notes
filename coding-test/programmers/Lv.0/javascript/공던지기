function solution(numbers, k) {
    const index = ((k-1)*2) % numbers.length;
    return numbers[index]
}

// [문제 핵심 요약]
// numbers 배열에 있는 친구들이 원을 이루고 앉아 있고,
// 공은 1번부터 시작해서, 오른쪽으로 한 명씩 건너뛰며 공을 던짐
// (바로 옆 사람이 아닌, 옆의 옆 사람)
// k번째에 "공을 던지는 사람"의 번호를 구해야 함

// [핵심 규칙]
// - 공을 던질 때마다 2칸씩 이동
// - k번째 던질 차례일 때는 총 (k - 1)번 이동이 이루어짐
//   → 예: 1번째 던지면 이동 없음, 2번째 던지면 2칸 이동, 3번째 던지면 4칸 이동...

// [계산]
// - ((k - 1) * 2): k번째 던지기까지 공이 이동된 총 칸 수
// - % numbers.length: 원형 구조이므로 배열 범위를 초과하면 처음부터 다시 돌아감

// [결과]
// - 계산된 index 위치의 사람이 k번째로 공을 던지게 됨
