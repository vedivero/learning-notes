//문제 설명
//머쓱이는 친구에게 모스부호를 이용한 편지를 받았습니다.
// 그냥은 읽을 수 없어 이를 해독하는 프로그램을 만들려고 합니다.
// 문자열 letter가 매개변수로 주어질 때, letter를 영어 소문자로 바꾼 문자열을 return 하도록 solution 함수를 완성해보세요.
//모스부호는 다음과 같습니다.
//morse = {
//    '.-':'a','-...':'b','-.-.':'c','-..':'d','.':'e','..-.':'f',
//    '--.':'g','....':'h','..':'i','.---':'j','-.-':'k','.-..':'l',
//    '--':'m','-.':'n','---':'o','.--.':'p','--.-':'q','.-.':'r',
//    '...':'s','-':'t','..-':'u','...-':'v','.--':'w','-..-':'x',
//    '-.--':'y','--..':'z'
//}

//입출력 예
//letter	                    result
//".... . .-.. .-.. ---"	    "hello"
//".--. -.-- - .... --- -."	    "python"

class Solution {
    public String solution(String letter) {

        String[] morse = {
            ".-", "-...", "-.-.", "-..", ".", "..-.",
            "--.", "....", "..", ".---", "-.-", ".-..",
            "--", "-.", "---", ".--.", "--.-", ".-.",
            "...", "-", "..-", "...-", ".--", "-..-",
            "-.--", "--.."
        };

        StringBuilder sb = new StringBuilder();

        String[] letters = letter.split(" ");

        for (int i = 0; i < letters.length; i++) {
            for (int j = 0; j < morse.length; j++) {
                if(letters[i].equals(morse[j])){
                    sb.append((char)(97+j));
                }
            }
        }
        return sb.toString();
    }
}

// String 배열에 모스 부호를 순서대로 저장
// 가변 문자열 객체 인스턴스를 생성
// 전달 받은 모스 부호 매개 변수가 띄어쓰기로 구분되어 전달
// 띄어쓰기를 기준으로 모스 부호를 나누어서 String형태의 배열에 저장
// 이중반복문을 통해, 매개 변수의 길이 만큼, 모스 부호 전체 길이만큼을 순회하며
// 매칭되는 알파벳을 찾기
// 소문자 알파벳 'a'의 유니코드가 97이기 때문에
// j번째 값에 97을 더하여 해당 알파벳을 StringBuilder에 추가