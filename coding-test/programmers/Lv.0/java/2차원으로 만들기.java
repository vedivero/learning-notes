//문제 설명
//정수 배열 num_list와 정수 n이 매개변수로 주어집니다.
//num_list를 다음 설명과 같이 2차원 배열로 바꿔 return하도록 solution 함수를 완성해주세요.
//
//num_list가 [1, 2, 3, 4, 5, 6, 7, 8] 로 길이가 8이고 n이 2이므로 num_list를 2 * 4 배열로 다음과 같이 변경합니다.
//2차원으로 바꿀 때에는 num_list의 원소들을 앞에서부터 n개씩 나눠 2차원 배열로 변경합니다.
//
//num_list	                    n	    result
//[1, 2, 3, 4, 5, 6, 7, 8]	    2	    [[1, 2], [3, 4], [5, 6], [7, 8]]

// 입출력 예
// num_list	                                n	    result
// [1, 2, 3, 4, 5, 6, 7, 8]	                2	    [[1, 2], [3, 4], [5, 6], [7, 8]]
// [100, 95, 2, 4, 5, 6, 18, 33, 948]	    3	    [[100, 95, 2], [4, 5, 6], [18, 33, 948]]
class Solution {
    public int[][] solution(int[] num_list, int n) {

        int row = num_list.length / n;
        int[][] answer = new int[row][n];

        for (int i = 0; i < row; i++) {
            for (int j = 0; j < n; j++) {
                answer[i][j] = num_list[i * n + j];
            }
        }
        return answer;
    }
}
// 전달받은 1차원 배열의 전체 길이를 n으로 나누면
// 몇 개의 행(row)로 2차원 배열을 만들어야 하는지 알 수 있음
// 열(column)의 개수는 매개변수 n으로 정해짐
// 즉,
//   - 행의 개수 = 배열 길이 / n
//   - 열의 개수 = n
//
// 이중 반복문을 사용하여
// 각 행에 열 개수만큼 값을 순서대로 할당
//
// 이때,
// 1차원 배열에서 값을 가져올 위치는
// (행 번호 * 열 개수) + 열 번호 로 계산
// num_list[n번째 행 * 열 개수 + j번째 열]